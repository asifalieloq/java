package FileShareApp;

import com.main_pkg.App;


/**
* FileShareApp/_fileshareStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from fileshare.idl
* Tuesday, May 24, 2022 9:18:48 PM PKT
*/

public class _fileshareStub extends org.omg.CORBA.portable.ObjectImpl implements FileShareApp.fileshare
{

  public String RegisterFile (String argclientId, String argipAddress, int argportNumber, String argclientName, String argfileName, String argfileLocation, String argfileImage)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("RegisterFile", true);
                $out.write_string (argclientId);
                $out.write_string (argipAddress);
                $out.write_long (argportNumber);
                $out.write_string (argclientName);
                $out.write_string (argfileName);
                $out.write_string (argfileLocation);
                $out.write_string (argfileImage);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return RegisterFile (argclientId, argipAddress, argportNumber, argclientName, argfileName, argfileLocation, argfileImage        );
            } finally {
                _releaseReply ($in);
            }
  } // RegisterFile

  public String deleteFile (String argclientId, String argfileName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteFile", true);
                $out.write_string (argclientId);
                $out.write_string (argfileName);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return deleteFile (argclientId, argfileName        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteFile

  public String updateFile (int FileID, String argclientId, String argipAddress, int argportNumber, String argclientName, String argfileName, String argfileLocation, String argfileImage)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("updateFile", true);
                $out.write_long (FileID);
                $out.write_string (argclientId);
                $out.write_string (argipAddress);
                $out.write_long (argportNumber);
                $out.write_string (argclientName);
                $out.write_string (argfileName);
                $out.write_string (argfileLocation);
                $out.write_string (argfileImage);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return updateFile (FileID, argclientId, argipAddress, argportNumber, argclientName, argfileName, argfileLocation, argfileImage        );
            } finally {
                _releaseReply ($in);
            }
  } // updateFile

  public String listFile (int loopId, org.omg.CORBA.IntHolder FileID, org.omg.CORBA.StringHolder argclientId, org.omg.CORBA.StringHolder argipAddress, org.omg.CORBA.IntHolder argportNumber, org.omg.CORBA.StringHolder argclientName, org.omg.CORBA.StringHolder argfileName, org.omg.CORBA.StringHolder argfileLocation, org.omg.CORBA.StringHolder argfileImage)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listFile", true);
                $out.write_long (loopId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                FileID.value = $in.read_long ();
                argclientId.value = $in.read_string ();
                argipAddress.value = $in.read_string ();
                argportNumber.value = $in.read_long ();
                argclientName.value = $in.read_string ();
                argfileName.value = $in.read_string ();
                argfileLocation.value = $in.read_string ();
                argfileImage.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listFile (loopId, FileID, argclientId, argipAddress, argportNumber, argclientName, argfileName, argfileLocation, argfileImage        );
            } finally {
                _releaseReply ($in);
            }
  } // listFile

  public String printFiles (int loopId, org.omg.CORBA.StringHolder argclientId, org.omg.CORBA.StringHolder argipAddress, org.omg.CORBA.IntHolder argportNumber, org.omg.CORBA.StringHolder argclientName, org.omg.CORBA.IntHolder FileID, org.omg.CORBA.StringHolder argfileName, org.omg.CORBA.StringHolder argfileLocation, org.omg.CORBA.StringHolder argfileImage)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("printFiles", true);
                $out.write_long (loopId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                argclientId.value = $in.read_string ();
                argipAddress.value = $in.read_string ();
                argportNumber.value = $in.read_long ();
                argclientName.value = $in.read_string ();
                FileID.value = $in.read_long ();
                argfileName.value = $in.read_string ();
                argfileLocation.value = $in.read_string ();
                argfileImage.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return printFiles (loopId, argclientId, argipAddress, argportNumber, argclientName, FileID, argfileName, argfileLocation, argfileImage        );
            } finally {
                _releaseReply ($in);
            }
  } // printFiles

  public int getTotalNumberOfFiles ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTotalNumberOfFiles", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTotalNumberOfFiles (        );
            } finally {
                _releaseReply ($in);
            }
  } // getTotalNumberOfFiles

  public int getLastFileID ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getLastFileID", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getLastFileID (        );
            } finally {
                _releaseReply ($in);
            }
  } // getLastFileID

  public int refreshList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("refreshList", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                App.SERVER_STATUS=1;
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return refreshList (        );
            } finally {
                _releaseReply ($in);
            }
  } // refreshList

  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FileShareApp/fileshare:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _fileshareStub
