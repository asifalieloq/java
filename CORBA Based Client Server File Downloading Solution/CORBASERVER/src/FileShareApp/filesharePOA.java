package FileShareApp;


/**
* FileShareApp/filesharePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from fileshare.idl
* Tuesday, May 24, 2022 9:18:48 PM PKT
*/

public abstract class filesharePOA extends org.omg.PortableServer.Servant
 implements FileShareApp.fileshareOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("RegisterFile", new java.lang.Integer (0));
    _methods.put ("deleteFile", new java.lang.Integer (1));
    _methods.put ("updateFile", new java.lang.Integer (2));
    _methods.put ("listFile", new java.lang.Integer (3));
    _methods.put ("printFiles", new java.lang.Integer (4));
    _methods.put ("getTotalNumberOfFiles", new java.lang.Integer (5));
    _methods.put ("getLastFileID", new java.lang.Integer (6));
    _methods.put ("refreshList", new java.lang.Integer (7));
    _methods.put ("shutdown", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // FileShareApp/fileshare/RegisterFile
       {
         String argclientId = in.read_string ();
         String argipAddress = in.read_string ();
         int argportNumber = in.read_long ();
         String argclientName = in.read_string ();
         String argfileName = in.read_string ();
         String argfileLocation = in.read_string ();
         String argfileImage = in.read_string ();
         String $result = null;
         $result = this.RegisterFile (argclientId, argipAddress, argportNumber, argclientName, argfileName, argfileLocation, argfileImage);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // FileShareApp/fileshare/deleteFile
       {
         String argclientId = in.read_string ();
         String argfileName = in.read_string ();
         String $result = null;
         $result = this.deleteFile (argclientId, argfileName);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // FileShareApp/fileshare/updateFile
       {
         int FileID = in.read_long ();
         String argclientId = in.read_string ();
         String argipAddress = in.read_string ();
         int argportNumber = in.read_long ();
         String argclientName = in.read_string ();
         String argfileName = in.read_string ();
         String argfileLocation = in.read_string ();
         String argfileImage = in.read_string ();
         String $result = null;
         $result = this.updateFile (FileID, argclientId, argipAddress, argportNumber, argclientName, argfileName, argfileLocation, argfileImage);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // FileShareApp/fileshare/listFile
       {
         int loopId = in.read_long ();
         org.omg.CORBA.IntHolder FileID = new org.omg.CORBA.IntHolder ();
         org.omg.CORBA.StringHolder argclientId = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder argipAddress = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.IntHolder argportNumber = new org.omg.CORBA.IntHolder ();
         org.omg.CORBA.StringHolder argclientName = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder argfileName = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder argfileLocation = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder argfileImage = new org.omg.CORBA.StringHolder ();
         String $result = null;
         $result = this.listFile (loopId, FileID, argclientId, argipAddress, argportNumber, argclientName, argfileName, argfileLocation, argfileImage);
         out = $rh.createReply();
         out.write_string ($result);
         out.write_long (FileID.value);
         out.write_string (argclientId.value);
         out.write_string (argipAddress.value);
         out.write_long (argportNumber.value);
         out.write_string (argclientName.value);
         out.write_string (argfileName.value);
         out.write_string (argfileLocation.value);
         out.write_string (argfileImage.value);
         break;
       }

       case 4:  // FileShareApp/fileshare/printFiles
       {
         int loopId = in.read_long ();
         org.omg.CORBA.StringHolder argclientId = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder argipAddress = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.IntHolder argportNumber = new org.omg.CORBA.IntHolder ();
         org.omg.CORBA.StringHolder argclientName = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.IntHolder FileID = new org.omg.CORBA.IntHolder ();
         org.omg.CORBA.StringHolder argfileName = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder argfileLocation = new org.omg.CORBA.StringHolder ();
         org.omg.CORBA.StringHolder argfileImage = new org.omg.CORBA.StringHolder ();
         String $result = null;
         $result = this.printFiles (loopId, argclientId, argipAddress, argportNumber, argclientName, FileID, argfileName, argfileLocation, argfileImage);
         out = $rh.createReply();
         out.write_string ($result);
         out.write_string (argclientId.value);
         out.write_string (argipAddress.value);
         out.write_long (argportNumber.value);
         out.write_string (argclientName.value);
         out.write_long (FileID.value);
         out.write_string (argfileName.value);
         out.write_string (argfileLocation.value);
         out.write_string (argfileImage.value);
         break;
       }

       case 5:  // FileShareApp/fileshare/getTotalNumberOfFiles
       {
         int $result = (int)0;
         $result = this.getTotalNumberOfFiles ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 6:  // FileShareApp/fileshare/getLastFileID
       {
         int $result = (int)0;
         $result = this.getLastFileID ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 7:  // FileShareApp/fileshare/refreshList
       {
         int $result = (int)0;
         $result = this.refreshList ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 8:  // FileShareApp/fileshare/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FileShareApp/fileshare:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public fileshare _this() 
  {
    return fileshareHelper.narrow(
    super._this_object());
  }

  public fileshare _this(org.omg.CORBA.ORB orb) 
  {
    return fileshareHelper.narrow(
    super._this_object(orb));
  }


} // class filesharePOA
